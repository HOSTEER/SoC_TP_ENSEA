#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "sleep.h"

void Test_leds(){
	volatile uint16_t * ptrLed = (uint16_t *)(XPAR_GPIO_1_BASEADDR + 0x0008);
	*(ptrLed+0x0002)=0;//Choix d'accès au channel pour l'écriture
	*ptrLed=0x5555;//0101 0101 0101 0101
}

void sw2leds(){
	volatile uint16_t * ptrLed = (uint16_t *)(XPAR_GPIO_1_BASEADDR + 0x0008);
	volatile uint16_t * ptrSw = (uint16_t *)(XPAR_GPIO_2_BASEADDR);
	*(ptrLed+0x0002)=0;//Choix d'accès au channel pour l'écriture
	*(ptrSw+0x0002)=1;//Choix d'accès au channel pour la lecture
	*ptrLed=*ptrSw;//Les leds s'allument si un switch est à 1
}

void cheniller(){
	volatile uint16_t * ptrLed = (uint16_t *)(XPAR_GPIO_1_BASEADDR + 0x0008);
	*(ptrLed+0x0002)=0;
	static uint16_t pos=1,dir=1;
	if(pos<=0x4000&&dir){*ptrLed=pos;pos=pos<<1;}
	else if(pos>4000&&dir){*ptrLed=pos;pos=pos>>1;dir=0;}
	else if(pos>0x001&&(dir==0)){*ptrLed=pos;pos=pos>>1;}
	else{*ptrLed=pos;pos=pos<<1;dir=1;}
	usleep(100000);
}

int main()
{
    init_platform();
    //Test_leds();
    print("Hello World\n\r");
    while(1){
    	//sw2leds();
    	cheniller();
    }

    cleanup_platform();
    return 0;
}
